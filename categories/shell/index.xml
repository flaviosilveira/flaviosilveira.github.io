<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shell on Vida e Tecnologia</title>
    <link>/categories/shell/</link>
    <description>Recent content in shell on Vida e Tecnologia</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 17 Jan 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/shell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Erros No Vagrant No Mavericks OSX?</title>
      <link>/2014/erros-com-vagrant-no-mavericks-osx/</link>
      <pubDate>Fri, 17 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/erros-com-vagrant-no-mavericks-osx/</guid>
      <description>&lt;p&gt;Há algum tempo a Apple liberou a nova versão de seu sistema operacional, o Mavericks OSX. Se você usa Macs e Vagrant para desenvolvimento deve ter percebido que as coisas de repente não rodaram mais.&lt;/p&gt;

&lt;p&gt;[Ainda não sabe o que é Vagrant? Confira esses meus dois posts: &lt;a href=&#34;http://flaviosilveira.com/2012/vagrant-facil-e-util/&#34; title=&#34;Vagrant fácil e útil&#34;&gt;http://flaviosilveira.com/2012/vagrant-facil-e-util/&lt;/a&gt; e &lt;a href=&#34;http://flaviosilveira.com/2013/vagrant-puphpet-e-php-built-in/&#34; title=&#34;Vagrant, PuPHPet e PHP Built In&#34;&gt;http://flaviosilveira.com/2013/vagrant-puphpet-e-php-built-in/&lt;/a&gt;]&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Salvando Tempo No Terminal</title>
      <link>/2011/salvando-tempo-no-terminal/</link>
      <pubDate>Fri, 02 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/salvando-tempo-no-terminal/</guid>
      <description>&lt;p&gt;Fala pessoal!&lt;/p&gt;

&lt;p&gt;No post anterior (&lt;a href=&#34;http://flaviosilveira.com/2011/conhecendo-melhor-seu-interpretador-de-comandos/&#34;&gt;conhecendo melhor seu interpretador de comandos&lt;/a&gt;) vimos uma prévia sobre o que é Shell e as implementações de Shell, dentro disso a principal de todas elas que é o bash e alguns comandos que podem facilitar a sua vida enquanto trabalha com ele.&lt;/p&gt;

&lt;p&gt;Seguindo o comentário do meu super brother Daniel Correa, vamos falar rapidamente aqui sobre um alguns comandos que podes salvar alguns minutos (até horas) de trabalho no terminal.&lt;/p&gt;

&lt;p&gt;Quantas vezes você já não precisou daquele comando no terminal que executou há semanas, meses atrás, e não lembra de maneira alguma. O que você faz?? Inevitavelmente fica clicando na tecla da seta para cima por horas até encontrar o seu abençoado comando. Mas você deve saber que essa não é a melhor maneira de resolver isso.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Conhecendo Melhor Seu Interpretador De Comandos</title>
      <link>/2011/conhecendo-melhor-seu-interpretador-de-comandos/</link>
      <pubDate>Sun, 30 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/conhecendo-melhor-seu-interpretador-de-comandos/</guid>
      <description>&lt;p&gt;Se você é usuário de sistemas operacionais baseados em unix, deve estar acostumado a abrir o terminal para tarefas simples como mover e copiar arquivos, remover arquivos em massa, criar pastas, verificar diretórios, etc. Se você conhece um pouco mais e administra sites por exemplo, deve mover seus arquivos com scp, usar conexões ssh e fazer todo seu trabalho via terminal.&lt;/p&gt;

&lt;p&gt;Quem faz essa ligação entre você e o coração do sistema operacional, permitindo executar esses comandos, é o Shell. Quem interpreta e processa os comandos para você, é uma implementação do Shell, que é o que vamos conhecer melhor aqui hoje.&lt;/p&gt;

&lt;p&gt;Este termo Shell, deve ter feito você lembrar sobre Shell Script, que escutamos falar muito e nada mais é do que um script com vários comandos Shell dentro dele.&lt;/p&gt;

&lt;p&gt;Dentre as implementações de Shell, aquilo que interpreta seus comandos, a mais famosa hoje é o Bash (Bourne-again shell, fazendo uma referência ao Bourne Shell que você pode pesquisar sobre). Para conferir qual o interpretador padrão de seus comandos, em seu terminal digite o seguinte comando&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CodeIgniter ‘metido’ a Ruby on Rails. (ciforms.sh)</title>
      <link>/2009/codeigniter-metido-a-ruby/</link>
      <pubDate>Thu, 16 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/codeigniter-metido-a-ruby/</guid>
      <description>&lt;p&gt;Salve Galera&amp;#8230;&lt;/p&gt;

&lt;p&gt;Vocês sabem, muitos projetos em sistemas são similares, sempre aquela mesma coisa&amp;#8230;Listar, Inserir, Editar e Remover.&lt;br/&gt;
Isso me levou a querer criar algo para facilitar tudo isso.&lt;/p&gt;

&lt;p&gt;Vendo meu Amigo &lt;a href=&#34;http://www.fabiotomio.com&#34; title=&#34;Fábio&#39;s Blogs&#34;&gt;Fábio Tomio&lt;/a&gt; mandando ver no &lt;a href=&#34;http://www.rubyonrails.pro.br/&#34;&gt;Ruby On Rails&lt;/a&gt;, ele me mostrou que criava um cadastro (Listar, Inserir, Editar e Remover) muito facilmente, com apenas um comando no terminal, usando a funcão Scaffold se não me engano.&lt;/p&gt;

&lt;p&gt;Inspirado nisso, resolvi fazer um Shell Script que geraria todas as views, controller e model prontas com essas opções.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introdução&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chamei de CiForms.&lt;/li&gt;
&lt;li&gt;Essa é uma versão de teste. É a versão Zero.&lt;/li&gt;
&lt;li&gt;Fiz esse script como estudo. Não tenho pretensões de lucros, suporte, nem nada com ele.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Porque não usar o Scaffolding do CodeIgniter&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;O Scaffolding do CodeIgniter não é aproveitável para o desenvolvimento de um projeto, ele não segue o padrão MVC do Framework. Como consta no manual, ele é apenas uma maneira de popular rapidamente uma tabela.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>